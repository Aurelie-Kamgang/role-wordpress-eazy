---
- name: Restore site from s3
  tags:
    - restore_site_s3
  block:
    - name: Install aws cli for python3.8
      vars:
        ansible_python_interpreter: /usr/local/bin/python3.8
      ansible.builtin.command: "/usr/local/bin/python3.8 -m pip install awscli"
      changed_when: false

    - name: Install botocore and boto3 using pip3.8
      ansible.builtin.command: /usr/local/bin/pip3.8 install botocore boto3
      vars:
        ansible_python_interpreter: /usr/local/bin/python3.8
      changed_when: false

    - name: Télécharger la base de données depuis S3
      vars:
        ansible_python_interpreter: /usr/local/bin/python3.8
      ansible.builtin.command: "/usr/local/bin/aws s3 cp s3://{{ s3_bucket_name }}/{{ s3_remote_directory_site }}/{{ s3_filename_site }} {{ compose_project_dir }}/{{ s3_site_restore }}/{{ s3_filename_site }}"
      environment:
        AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
        AWS_DEFAULT_REGION: "{{ region }}"
      changed_when: false

    # - name: Synchroniser le répertoire local avec S3
    #   vars:
    #     ansible_python_interpreter: /usr/local/bin/python3.8
    #   aws_s3:
    #     bucket: "{{ s3_bucket_name }}"
    #     object: "{{ s3_remote_directory_site }}/{{ s3_filename_site }}"
    #     dest: "{{ compose_project_dir }}/s3_site_restore/{{ s3_filename_site }}"
    #     mode: get
    #     secret_key: "{{ aws_secret_key }}"
    #     access_key: "{{ aws_access_key }}"
    #     region: "{{ region }}"

    - name: Stop frontend container
      ansible.builtin.command: docker stop {{ wordpress_container_name }}
      notify:
        - Restore_db_s3
      changed_when: false

    - name: "Flush handlers restore site from s3 bucket "
      ansible.builtin.meta: flush_handlers

    - name: Extraire le fichier ZIP
      ansible.builtin.command: sudo unzip -o {{ s3_restore_file_name.restore_files_path }}/{{ s3_restore_file_name.restore_pattern }} -d unzip_folder/
      changed_when: false

    - name: Copier les fichiers extraits depuis unzip_folder au reperoire eazytraining
      ansible.builtin.command: sh -c "sudo cp -r unzip_folder/* {{ wordpress_site }}"
      changed_when: false

    - name: Remove files from unzip folder
      ansible.builtin.command: sh -c "sudo rm -r unzip_folder/*"
      changed_when: false

    - name: Changer le propriétaire et les permissions des répertoires
      #become: yes
      #become_user: "{{ system_user }}"
      ansible.builtin.file:
        path: "{{ wordpress_site }}"
        owner: centos
        group: 33
        recurse: yes

    - name: Changer les permissions du répertoire plugins
      ansible.builtin.file:
        path: "{{ wordpress_site }}/wp-content/plugins/"
        mode: "0775"
        recurse: yes


    - name: Changer les permissions du répertoire malcare-security
      ansible.builtin.file:
        path: "{{ wordpress_site }}/plugins/malcare-security"
        mode: "0777"
        recurse: yes

    - name: Start frontend container
      ansible.builtin.command: docker start {{ wordpress_container_name }}
      changed_when: false
