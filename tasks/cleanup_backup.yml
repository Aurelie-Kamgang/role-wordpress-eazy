- block:
    - name: Get a list of backup files
      find:
        paths: "{{ global_backup_db }}"
        patterns: "backup_*_EAZYTraining_*_global_db.sql"
      register: backup_files 

    - name: Get today's date
      set_fact:
        current_date: "{{ ansible_date_time.date }}"
    
    - name: Subtract 2 days from today's date
      command: date -d "{{ current_date }} - 2 days" +"%Y-%m-%d"
      register: two_days_ago
    
    #- name: Show today's date subtracted by 2 days
     # debug:
      #  var: two_days_ago.stdout
    
    - name: Compare with regular expression output
      debug:
        msg: "oui"
      when: item.path | regex_replace('^.{67}(.{10}).*', '\\1') == two_days_ago.stdout
      loop: "{{ backup_files.files }}"
      loop_control:
        label: "{{ item.path }}"

    - name: Delete old files
      command: "rm {{ item.path }}"
      loop: "{{ backup_files.files }}"
      loop_control:
        label: "{{ item.path }}"
      when: item.path | regex_replace('^.{78}(.{2}).*', '\\1') != '23' and item.path | regex_replace('^.{67}(.{10}).*', '\\1') == two_days_ago.stdout
      
    - name: Renommer les fichiers conformes
      command: "mv {{ item.path }} {{ backup_db_dir }}/{{ 'daily_' + item.path.split('/')[-1] }}"
      loop: "{{ backup_files.files }}"
      loop_control:
        label: "{{ item.path }}"
      when: item.path | regex_replace('^.{78}(.{2}).*', '\\1') == '23' and item.path | regex_replace('^.{67}(.{10}).*', '\\1') == two_days_ago.stdout

    - name: Synchroniser le r√©pertoire local avec S3
      vars:
          ansible_python_interpreter: /usr/local/bin/python3.8
      s3_sync:
          bucket: "{{ s3_bucket_name }}"
          file_root: "{{ global_backup_db }}"
          delete: yes
          secret_key: "{{ aws_secret_key }}"
          access_key: "{{ aws_access_key}}"
          key_prefix: "{{ s3_remote_directory_db }}"
        
  tags:
    - cleanup_backup
