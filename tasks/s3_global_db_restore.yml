---
- name: Restore db from s3
  tags:
    - restore_db_s3
  block:
    - name: Install botocore and boto3 using pip3.8
      ansible.builtin.command: /usr/local/bin/pip3.8 install botocore boto3
      vars:
        ansible_python_interpreter: /usr/local/bin/python3.8
      changed_when: false
    - name: Synchroniser le répertoire local avec S3
      vars:
        ansible_python_interpreter: /usr/local/bin/python3.8
      aws_s3:
        bucket: "{{ s3_bucket_name }}"
        object: "{{ s3_remote_directory_db }}/{{ s3_filename_db }}"
        dest: "{{ compose_project_dir }}/s3_db_restore/{{ s3_filename_db }}"
        mode: get
        secret_key: "{{ aws_secret_key }}"
        access_key: "{{ aws_access_key }}"
        region: "{{ region }}"

    - name: Supprimer le conteneur Docker site-vitrine-db s'il existe
      ansible.builtin.shell: docker stop {{ db_container_name }} && docker rm  {{ db_container_name }}
      changed_when: false

    - name: Supprimer le volume Docker site-vitrine-db-data s'il existe
      ansible.builtin.shell: docker volume rm -f {{ db_volume_name }}
      changed_when: false

    - name: Démarrer le conteneur Docker site-vitrine-db
      ansible.builtin.shell: cd {{ site_vitrine_directory }} && /usr/local/bin/docker-compose --compatibility up -d {{ db_container_name }}
      changed_when: false

    - name: Copier le fichier de sauvegarde vers le conteneur
      ansible.builtin.command: docker cp {{ s3_restore_db_name.restore_files_path }}/{{ s3_restore_db_name.restore_pattern }} {{ db_container_name }}:{{ s3_restore_db_name.restore_pattern }}
      changed_when: false

    - name: Patienter avant de continuer
      ansible.builtin.command: sleep 4
      changed_when: false

    - name: Restaurer le fichier SQL dans la base de données MySQL
      ansible.builtin.command: docker exec -i {{ db_container_name }} sh -c "exec mysql  -u{{ wp_db_user }} -p{{ wp_db_psw }} {{ wp_db_name }} < {{ restore_db_name.restore_pattern }}"
      changed_when: false

    - name: Remove file from wordpress container
      ansible.builtin.command: docker exec {{ db_container_name }} sh -c 'rm ./*.sql'
      changed_when: false
